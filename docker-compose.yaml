version: '3.7'

services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - ./volumes/minio:/data

  db:
    container_name: postgres
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
       - ./volumes/postgres:/data/postgres
    ports:
      - "5432:5432"
      
  mlflow:
    restart: always
    build: ./Docker/mlflow_image
    image: mlflow_server
    container_name: mlflow_server
    ports:
      - "5000:5000"

    depends_on:
      - minio
      - db
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
    command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB} --default-artifact-root s3://${S3_BUCKET}/ --host 0.0.0.0

  ml_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ml_service
    restart: always
    ports:
      - "14956:14956"
    depends_on:
      - mlflow
    environment:
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  locust:
    build:
      context: .
      dockerfile: Dockerfile.locust
    container_name: locust
    depends_on:
      - ml_service
    ports:
      - "8089:8089"
    # environment:
    #   # Если нужны дополнительные переменные окружения, добавьте их здесь
    #   - LOCUST_HOST=http://ml_service:14956